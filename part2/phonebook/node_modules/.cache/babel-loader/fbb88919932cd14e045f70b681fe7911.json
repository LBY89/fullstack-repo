{"ast":null,"code":"var _jsxFileName = \"/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/components/PersonForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport personService from './services';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonForm = props => {\n  _s();\n\n  const [persons, setPersons] = props.person;\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const addName = event => {\n    event.preventDefault();\n    const nameObj = {\n      name: newName,\n      number: newNumber,\n      id: nanoid()\n    };\n\n    if (persons.find(person => person.name === newName)) {\n      //myArray.find(x => x.id === '45').foo;\n      const id = persons.find(person => person.name === newName).id;\n      const changedPerson = { ...nameObj,\n        number: nameObj.number\n      };\n\n      if (window.confirm(`${newName} already there`)) {\n        personService.update(id, changedPerson).then(returnPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnPerson));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    }\n  };\n\n  const handleNameChange = event => {\n    const {\n      value\n    } = event.target; //console.log('value', value)\n\n    setNewName(value);\n\n    if (persons.find(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === value;\n    })) {\n      return window.alert(`${value} is already added to phonebook`);\n    }\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addName,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PersonForm, \"hX6U5bNNuNU4id/SHXfc8tOdMvo=\");\n\n_c = PersonForm;\nexport default PersonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"sources":["/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/components/PersonForm.js"],"names":["React","useEffect","useState","personService","nanoid","PersonForm","props","persons","setPersons","person","newName","setNewName","newNumber","setNewNumber","addName","event","preventDefault","nameObj","name","number","id","find","changedPerson","window","confirm","update","then","returnPerson","map","handleNameChange","value","target","alert","handleNumberChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,KAAK,CAACG,MAApC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMY,OAAO,GAAIC,KAAD,IAAW;AAEvBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAER,OADQ;AAEdS,MAAAA,MAAM,EAAEP,SAFM;AAGdQ,MAAAA,EAAE,EAAEhB,MAAM;AAHI,KAAhB;;AAOA,QAAIG,OAAO,CAACc,IAAR,CAAcZ,MAAD,IAAWA,MAAM,CAACS,IAAP,KAAgBR,OAAxC,CAAJ,EAAqD;AACnD;AACA,YAAMU,EAAE,GAAGb,OAAO,CAACc,IAAR,CAAaZ,MAAM,IAAEA,MAAM,CAACS,IAAP,KAAcR,OAAnC,EAA4CU,EAAvD;AACA,YAAME,aAAa,GAAG,EAAC,GAAGL,OAAJ;AAAaE,QAAAA,MAAM,EAAEF,OAAO,CAACE;AAA7B,OAAtB;;AACA,UAAII,MAAM,CAACC,OAAP,CAAgB,GAAEd,OAAQ,gBAA1B,CAAJ,EAAgD;AAC9CP,QAAAA,aAAa,CACZsB,MADD,CACQL,EADR,EACYE,aADZ,EAECI,IAFD,CAEMC,YAAY,IAAE;AAClBnB,UAAAA,UAAU,CAACD,OAAO,CAACqB,GAAR,CAAYnB,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcA,EAAd,GAAmBX,MAAnB,GAA4BkB,YAAlD,CAAD,CAAV;AACAhB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,SAND;AAOD;AACF;AAEJ,GA1BD;;AA2BA,QAAMgB,gBAAgB,GAAId,KAAD,IAAW;AAChC,UAAK;AAACe,MAAAA;AAAD,QAAUf,KAAK,CAACgB,MAArB,CADgC,CAEhC;;AAEApB,IAAAA,UAAU,CAACmB,KAAD,CAAV;;AACA,QAAIvB,OAAO,CAACc,IAAR,CAAa;AAAA,UAAC;AAACH,QAAAA;AAAD,OAAD;AAAA,aAAWA,IAAI,KAAKY,KAApB;AAAA,KAAb,CAAJ,EAA6C;AAE3C,aAAOP,MAAM,CAACS,KAAP,CAAc,GAAEF,KAAM,gCAAtB,CAAP;AACD;AACJ,GATD;;AAWA,QAAMG,kBAAkB,GAAIlB,KAAD,IAAW;AAClCF,IAAAA,YAAY,CAACE,KAAK,CAACgB,MAAN,CAAaD,KAAd,CAAZ;AAEH,GAHD;;AAMA,sBACI;AAAM,IAAA,QAAQ,EAAEhB,OAAhB;AAAA,4BACA;AAAA,wCACQ;AAAO,QAAA,KAAK,EAAEJ,OAAd;AAAuB,QAAA,QAAQ,EAAEmB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAA,0CACU;AAAO,QAAA,KAAK,EAAEjB,SAAd;AAAyB,QAAA,QAAQ,EAAEqB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAOA;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9DD;;GAAM5B,U;;KAAAA,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport personService from './services'\nimport { nanoid } from 'nanoid'\nconst PersonForm = (props) => {\n    const [persons, setPersons] = props.person\n    \n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const addName = (event) => {\n      \n        event.preventDefault()\n\n        const nameObj = {\n          name: newName,\n          number: newNumber,\n          id: nanoid()\n    \n        }\n\n        if (persons.find((person)=> person.name === newName)){\n          //myArray.find(x => x.id === '45').foo;\n          const id = persons.find(person=>person.name===newName).id\n          const changedPerson = {...nameObj, number: nameObj.number}\n          if (window.confirm(`${newName} already there`)) {\n            personService\n            .update(id, changedPerson)\n            .then(returnPerson=>{\n              setPersons(persons.map(person => person.id !== id ? person : returnPerson))\n              setNewName('')\n              setNewNumber('')\n            })\n          }\n        }\n         \n    }\n    const handleNameChange = (event) => {\n        const{value} = event.target\n        //console.log('value', value)\n        \n        setNewName(value)\n        if (persons.find(({name})=> name === value)) {\n          \n          return window.alert(`${value} is already added to phonebook`)\n        }\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n        \n    }\n\n\n    return (\n        <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n    );\n}\n\nexport default PersonForm;\n\n"]},"metadata":{},"sourceType":"module"}