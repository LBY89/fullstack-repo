{"ast":null,"code":"var _jsxFileName = \"/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport personService from './components/services';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = _ref => {\n  let {\n    message\n  } = _ref;\n\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notification;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [noticeMessage, setNoticeMessage] = useState(''); //console.log('persons', persons)\n\n  useEffect(() => {\n    console.log('effect');\n    personService.getAll().then(allpersons => {\n      setPersons(allpersons);\n    });\n  }, []);\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ${person.number}`)) {\n      //const newpersons = persons.filter((item)=>item !== person)\n      personService.deletePerson(person.id).then(() => {\n        setPersons(persons.filter(newperson => newperson.id != person.id));\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: noticeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      person: [persons, setPersons]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      person: [persons, setPersons]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"w2JCf8iqf22jLjzyCIgsd8GyrOI=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/App.js"],"names":["useState","useEffect","axios","Persons","Filter","PersonForm","personService","Notification","message","App","persons","setPersons","noticeMessage","setNoticeMessage","console","log","getAll","then","allpersons","deletePerson","person","window","confirm","name","number","id","filter","newperson"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAE,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;;AACnC,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;KAAMD,Y;;AAWN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD,CAFgB,CAIhB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,IAAAA,aAAa,CACZU,MADD,GAECC,IAFD,CAEMC,UAAU,IAAG;AACjBP,MAAAA,UAAU,CAACO,UAAD,CAAV;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,YAAY,GAAEC,MAAM,IAAE;AAE1B,QAAIC,MAAM,CAACC,OAAP,CAAgB,UAASF,MAAM,CAACG,IAAK,IAAGH,MAAM,CAACI,MAAO,EAAtD,CAAJ,EAA8D;AAC9D;AAEAlB,MAAAA,aAAa,CACZa,YADD,CACcC,MAAM,CAACK,EADrB,EAECR,IAFD,CAEM,MAAK;AACTN,QAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAeC,SAAS,IAAEA,SAAS,CAACF,EAAV,IAAgBL,MAAM,CAACK,EAAjD,CAAD,CAAV;AAED,OALD;AAOC;AAEF,GAdD;;AAgBA,sBAEE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEb;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,CAACF,OAAD,EAAUC,UAAV;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAACD,OAAD,EAAUC,UAAV;AAApB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED,OAAlB;AAA2B,MAAA,YAAY,EAAGS;AAA1C;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAeD,CA9CD;;GAAMV,G;;MAAAA,G;AAgDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './components/services'\nimport './index.css'\n\nconst Notification =({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [noticeMessage, setNoticeMessage] = useState('')\n\n  //console.log('persons', persons)\n  \n  useEffect(() => {\n    console.log('effect')\n    personService\n    .getAll()\n    .then(allpersons =>{\n      setPersons(allpersons)\n    })\n  }, [])\n  \n  const deletePerson =person=>{\n    \n    if (window.confirm(`Delete ${person.name} ${person.number}`)) {\n    //const newpersons = persons.filter((item)=>item !== person)\n   \n    personService\n    .deletePerson(person.id)\n    .then(() =>{\n      setPersons(persons.filter(newperson=>newperson.id != person.id))\n  \n    })\n   \n    }\n    \n  }\n\n  return (\n    \n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={noticeMessage}/>\n      <Filter person={[persons, setPersons]}/>\n      \n      <h3>Add a new</h3>\n      <PersonForm person={[persons, setPersons]} />\n      <h3>Numbers</h3>\n      \n      <Persons persons={persons} deletePerson= {deletePerson}/>\n      \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}