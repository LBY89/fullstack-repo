{"ast":null,"code":"var _jsxFileName = \"/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/components/PersonForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport personService from './services';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonForm = props => {\n  _s();\n\n  const [persons, setPersons] = props.person;\n  const [noticeMessage, setNoticeMessage] = props.person;\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const Notification = _ref => {\n    let {\n      message\n    } = _ref;\n\n    if (message === null) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    const nameObj = {\n      name: newName,\n      number: newNumber,\n      id: nanoid()\n    };\n\n    if (persons.find(person => person.name === newName)) {\n      const id = persons.find(person => person.name === newName).id;\n      const changedPerson = { ...nameObj,\n        number: nameObj.number\n      };\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService.update(id, changedPerson).then(returnPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnPerson));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n\n      return;\n    } else {\n      personService.create(nameObj).then(returnPerson => {\n        setTimeout(() => {\n          setNoticeMessage(`Added ${returnPerson.name}`);\n        }, 5000);\n        setPersons(persons.concat(returnPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    const {\n      value\n    } = event.target; //console.log('value', value)\n\n    setNewName(value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: noticeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PersonForm, \"hX6U5bNNuNU4id/SHXfc8tOdMvo=\");\n\n_c = PersonForm;\nexport default PersonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"sources":["/Users/baoying/fullstack/fullstack-repo/part2/exercises2.6-2.10&2.15.-2.18./src/components/PersonForm.js"],"names":["React","useEffect","useState","personService","nanoid","PersonForm","props","persons","setPersons","person","noticeMessage","setNoticeMessage","newName","setNewName","newNumber","setNewNumber","Notification","message","addName","event","preventDefault","nameObj","name","number","id","find","changedPerson","window","confirm","update","then","returnPerson","map","create","setTimeout","concat","handleNameChange","value","target","handleNumberChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,KAAK,CAACG,MAApC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,KAAK,CAACG,MAAhD;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMc,YAAY,GAAE,QAAiB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;;AACnC,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GATD;;AAUA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAEV,OADQ;AAEdW,MAAAA,MAAM,EAAET,SAFM;AAGdU,MAAAA,EAAE,EAAEpB,MAAM;AAHI,KAAhB;;AAKA,QAAIG,OAAO,CAACkB,IAAR,CAAchB,MAAD,IAAWA,MAAM,CAACa,IAAP,KAAgBV,OAAxC,CAAJ,EAAqD;AACnD,YAAMY,EAAE,GAAGjB,OAAO,CAACkB,IAAR,CAAahB,MAAM,IAAEA,MAAM,CAACa,IAAP,KAAcV,OAAnC,EAA4CY,EAAvD;AACA,YAAME,aAAa,GAAG,EAAC,GAAGL,OAAJ;AAAaE,QAAAA,MAAM,EAAEF,OAAO,CAACE;AAA7B,OAAtB;;AACA,UAAII,MAAM,CAACC,OAAP,CAAgB,GAAEhB,OAAQ,wEAA1B,CAAJ,EAAwG;AACtGT,QAAAA,aAAa,CACZ0B,MADD,CACQL,EADR,EACYE,aADZ,EAECI,IAFD,CAEMC,YAAY,IAAE;AAClBvB,UAAAA,UAAU,CAACD,OAAO,CAACyB,GAAR,CAAYvB,MAAM,IAAIA,MAAM,CAACe,EAAP,KAAcA,EAAd,GAAmBf,MAAnB,GAA4BsB,YAAlD,CAAD,CAAV;AACAlB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,SAND;AAOD;;AACD;AACD,KAbD,MAaM;AACJZ,MAAAA,aAAa,CACZ8B,MADD,CACQZ,OADR,EAECS,IAFD,CAEMC,YAAY,IAAE;AAClBG,QAAAA,UAAU,CAAC,MAAI;AACbvB,UAAAA,gBAAgB,CAAE,SAAQoB,YAAY,CAACT,IAAK,EAA5B,CAAhB;AACD,SAFS,EAEP,IAFO,CAAV;AAGAd,QAAAA,UAAU,CAACD,OAAO,CAAC4B,MAAR,CAAeJ,YAAf,CAAD,CAAV;AACAlB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OATD;AAUD;AAEJ,GAjCD;;AAmCA,QAAMqB,gBAAgB,GAAIjB,KAAD,IAAW;AAChC,UAAK;AAACkB,MAAAA;AAAD,QAAUlB,KAAK,CAACmB,MAArB,CADgC,CAEhC;;AAEAzB,IAAAA,UAAU,CAACwB,KAAD,CAAV;AAEH,GAND;;AAQA,QAAME,kBAAkB,GAAIpB,KAAD,IAAW;AAClCJ,IAAAA,YAAY,CAACI,KAAK,CAACmB,MAAN,CAAaD,KAAd,CAAZ;AAEH,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE3B;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEQ,OAAhB;AAAA,8BACA;AAAA,0CACQ;AAAO,UAAA,KAAK,EAAEN,OAAd;AAAuB,UAAA,QAAQ,EAAEwB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,4CACU;AAAO,UAAA,KAAK,EAAEtB,SAAd;AAAyB,UAAA,QAAQ,EAAEyB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAOA;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CAjFD;;GAAMlC,U;;KAAAA,U;AAmFN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport personService from './services'\nimport { nanoid } from 'nanoid'\n\nconst PersonForm = (props) => {\n    const [persons, setPersons] = props.person\n    const [noticeMessage, setNoticeMessage] = props.person\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const Notification =({ message }) => {\n      if (message === null) {\n        return null\n      }\n      return (\n        <div className='notice'>\n          {message}\n        </div>\n      )\n    }\n    const addName = (event) => {\n        event.preventDefault()\n        const nameObj = {\n          name: newName,\n          number: newNumber,\n          id: nanoid()\n        }\n        if (persons.find((person)=> person.name === newName)){\n          const id = persons.find(person=>person.name===newName).id\n          const changedPerson = {...nameObj, number: nameObj.number}\n          if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n            personService\n            .update(id, changedPerson)\n            .then(returnPerson=>{\n              setPersons(persons.map(person => person.id !== id ? person : returnPerson))\n              setNewName('')\n              setNewNumber('')\n            })\n          }\n          return\n        }else {\n          personService\n          .create(nameObj)\n          .then(returnPerson=>{\n            setTimeout(()=>{\n              setNoticeMessage(`Added ${returnPerson.name}`)\n            }, 5000)\n            setPersons(persons.concat(returnPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n        }\n        \n    }\n\n    const handleNameChange = (event) => {\n        const{value} = event.target\n        //console.log('value', value)\n        \n        setNewName(value)\n       \n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n        \n    }\n\n    return (\n      <div>\n        <Notification message={noticeMessage}/>\n        <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n        </form>\n      </div>\n        \n    );\n}\n\nexport default PersonForm;\n\n"]},"metadata":{},"sourceType":"module"}